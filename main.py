import asyncio
import requests
from bs4 import BeautifulSoup
from aiogram import Bot
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "8497876910:AAGLopwWA3mnpYIsGk3NH4IJS754ulH84v0"
CHANNEL_ID = "-1002955948611"

last_data = None
bot = Bot(token=BOT_TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –º–µ—Å—è—Ü–µ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
RUSSIAN_MONTHS = {
    1: '—è–Ω–≤–∞—Ä—è', 2: '—Ñ–µ–≤—Ä–∞–ª—è', 3: '–º–∞—Ä—Ç–∞', 4: '–∞–ø—Ä–µ–ª—è',
    5: '–º–∞—è', 6: '–∏—é–Ω—è', 7: '–∏—é–ª—è', 8: '–∞–≤–≥—É—Å—Ç–∞',
    9: '—Å–µ–Ω—Ç—è–±—Ä—è', 10: '–æ–∫—Ç—è–±—Ä—è', 11: '–Ω–æ—è–±—Ä—è', 12: '–¥–µ–∫–∞–±—Ä—è'
}


def parse_weather():
    """–ü–∞—Ä—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ"""
    url = "http://www.meteo.nw.ru/"
    response = requests.get(url, timeout=25)
    response.encoding = 'windows-1251'

    soup = BeautifulSoup(response.text, 'html.parser')

    data = {
        'temp': soup.find('div', id='wtemp').text.strip(),
        'weather': soup.find('div', id='wpic').img['title'],
        'wind_dir': soup.find('div', class_='wwindd2').text.strip(),
        'wind_speed': soup.find_all('div', class_='wttdr')[1].text.strip(),
        'pressure': soup.find_all('div', class_='wttdr')[2].text.strip(),
        'humidity': soup.find_all('div', class_='wttdr')[3].text.strip()
    }

    return data


async def check_and_send():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–≥–æ–¥—É"""
    global last_data

    current_data = parse_weather()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if str(current_data) != str(last_data):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        now = datetime.now()
        day = now.day
        month = RUSSIAN_MONTHS[now.month]
        year = now.year
        time = now.strftime("%H:%M")

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º
        current_date = f"{day} {month} {year}"

        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—Ä–µ–º–µ–Ω–µ–º
        message = (
            f"üå§Ô∏è *–ü–æ–≥–æ–¥–∞ –≤ –ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ {current_date}*\n"
            f"üïê *–í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:* {time}\n\n"
            f"üå°Ô∏è *–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:* {current_data['temp']}\n"
            f"‚òÅÔ∏è *–°–æ—Å—Ç–æ—è–Ω–∏–µ:* {current_data['weather']}\n"
            f"üí® *–í–µ—Ç–µ—Ä:* {current_data['wind_dir']}, {current_data['wind_speed']}\n"
            f"üìä *–î–∞–≤–ª–µ–Ω–∏–µ:* {current_data['pressure']}\n"
            f"üíß *–í–ª–∞–∂–Ω–æ—Å—Ç—å:* {current_data['humidity']}\n\n"
            f"#–ø–æ–≥–æ–¥–∞ #–°–ü–±"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª
        await bot.send_message(chat_id=CHANNEL_ID, text=message, parse_mode='Markdown')
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")

        last_data = current_data
    else:
        print("–î–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å")


async def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª"""
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    while True:
        await check_and_send()
        await asyncio.sleep(60)


if __name__ == "__main__":
    asyncio.run(main())
